{"version":3,"file":"component---src-pages-using-typescript-tsxhead.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAC8B;AAC2B;AAEhB;AACN;AAQnC,MAAMI,eAA+C,GAAG,CAAC;EACvDC,IAAI;EACJC,IAAI;EACJC;AACF,CAAC,kBACCP,gDAAAA,CAACE,0DAAM;EAACM,KAAK,EAAC,kBAAkB;EAACD,QAAQ,EAAEA;AAAS,gBAClDP,gDAAAA,aAAI,wCAAsC,CAAK,eAC/CA,gDAAAA,YAAG,2CACwC,8EAAM,UAAQ,CAAO,2CAClC,8EAAM,UAAQ,CAAO,sCACzC,8EAAM,kBAAgB,CAAO,MACvC,CAAI,eACJA,gDAAAA,YAAG,2CACwC,4EAAI,YAAU,CAAK,qBACxD,4EAAI,YAAU,CAAK,iBAAa,4EAAI,UAAQ,CAAK,UACvD,CAAI,eACJA,gDAAAA,YAAG,iCAC6B,EAACM,IAAI,EAAC,uBAAoB,EAAC,GAAG,EAC3DD,IAAI,CAACI,IAAI,CAACC,SAAS,EAAC,GACvB,CAAI,eACJV,gDAAAA,YAAG,iCAC8B,EAAC,GAAG,eACnCA,gDAAAA;EAAGW,IAAI,EAAC;AAAuE,GAAC,gCAEhF,CAAI,KAEN,CAAI,eACJX,gDAAAA,CAACC,wCAAI;EAACW,EAAE,EAAC;AAAG,GAAC,yBAAuB,CAAO,CAE9C;AAEM,MAAMC,IAAuB,GAAG,mBAAMb,gDAAAA,CAACG,uDAAG;EAACK,KAAK,EAAC;AAAkB,EAAG;AAE7E,iEAAeJ,eAAe;AAEvB,MAAMU,KAAK,eAMjB;;;;;;;;;;;;;;;;;ACtD6B;AACD;AAE7B,MAAMZ,MAAM,GAAG,CAAC;EAAEK,QAAQ;EAAEC,KAAK;EAAEO;AAAS,CAAC,KAAK;EAChD,MAAMC,QAAQ,GAAI,GAAEC,EAAgB,GAAE;EACtC,MAAMC,UAAU,GAAGX,QAAQ,CAACY,QAAQ,KAAKH,QAAQ;EACjD,IAAII,MAAM;EAEV,IAAIF,UAAU,EAAE;IACdE,MAAM,gBACJ;MAAI,SAAS,EAAC;IAAc,gBAC1B,iDAAC,wCAAI;MAAC,EAAE,EAAC;IAAG,GAAEZ,KAAK,CAAQ,CAE9B;EACH,CAAC,MAAM;IACLY,MAAM,gBACJ,iDAAC,wCAAI;MAAC,SAAS,EAAC,kBAAkB;MAAC,EAAE,EAAC;IAAG,GACtCZ,KAAK,CAET;EACH;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAC,qBAAmBU;EAAW,gBAC5D;IAAQ,SAAS,EAAC;EAAe,GAAEE,MAAM,CAAU,eACnD,+DAAOL,QAAQ,CAAQ,eACvB,iEAAQ,OACJ,EAAC,IAAIM,IAAI,EAAE,CAACC,WAAW,EAAE,EAAC,cAC5B,EAAE,GAAE,eACJ;IAAG,IAAI,EAAC;EAA0B,GAAC,QAAM,CAAI,CACtC,CACL;AAEV,CAAC;AAED,iEAAepB,MAAM;;;;;;;;;;;;;;;;;;ACnCrB;AACA;AACA;AACA;AACA;AACA;;AAE8B;AAG9B,MAAMC,GAAG,GAAG,CAAC;EAAEoB,WAAW;EAAEf,KAAK;EAAEO;AAAS,CAAC,KAAK;EAAA;EAChD,MAAM;IAAEN;EAAK,CAAC,GAAG,wEAchB;EAED,MAAMe,eAAe,GAAGD,WAAW,IAAId,IAAI,CAACgB,YAAY,CAACF,WAAW;EACpE,MAAMG,YAAY,yBAAGjB,IAAI,CAACgB,YAAY,uDAAjB,mBAAmBjB,KAAK;EAE7C,oBACE,iHACE,gEAAQkB,YAAY,GAAI,GAAElB,KAAM,MAAKkB,YAAa,EAAC,GAAGlB,KAAK,CAAS,eACpE;IAAM,IAAI,EAAC,aAAa;IAAC,OAAO,EAAEgB;EAAgB,EAAG,eACrD;IAAM,QAAQ,EAAC,UAAU;IAAC,OAAO,EAAEhB;EAAM,EAAG,eAC5C;IAAM,QAAQ,EAAC,gBAAgB;IAAC,OAAO,EAAEgB;EAAgB,EAAG,eAC5D;IAAM,QAAQ,EAAC,SAAS;IAAC,OAAO,EAAC;EAAS,EAAG,eAC7C;IAAM,IAAI,EAAC,cAAc;IAAC,OAAO,EAAC;EAAS,EAAG,eAC9C;IACE,IAAI,EAAC,iBAAiB;IACtB,OAAO,EAAE,wBAAAf,IAAI,CAACgB,YAAY,iFAAjB,oBAAmBE,MAAM,0DAAzB,sBAA2BC,OAAO,KAAK;EAAE,EAClD,eACF;IAAM,IAAI,EAAC,eAAe;IAAC,OAAO,EAAEpB;EAAM,EAAG,eAC7C;IAAM,IAAI,EAAC,qBAAqB;IAAC,OAAO,EAAEgB;EAAgB,EAAG,EAC5DT,QAAQ,CACR;AAEP,CAAC;AAED,iEAAeZ,GAAG","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["React","Link","Layout","Seo","UsingTypescript","data","path","location","title","site","buildTime","href","to","Head","query","children","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","description","metaDescription","siteMetadata","defaultTitle","social","twitter"],"sourceRoot":""}